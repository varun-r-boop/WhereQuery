// <auto-generated />
using System;
using Final.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final.Migrations
{
    [DbContext(typeof(HomezillaContext))]
    [Migration("20221212092133_entity2")]
    partial class entity2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("orderDetailsordersId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("orderDetailsordersId");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("Final.Entities.orderDetails", b =>
                {
                    b.Property<int>("ordersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ordersId"));

                    b.Property<DateTime>("appointmentDate")
                        .HasColumnType("date");

                    b.Property<int>("orderStatus")
                        .HasColumnType("int");

                    b.HasKey("ordersId");

                    b.ToTable("orderDetails");
                });

            modelBuilder.Entity("Final.Entities.providerDetails", b =>
                {
                    b.Property<Guid>("providerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("orderDetailsordersId")
                        .HasColumnType("int");

                    b.Property<string>("providerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("providerMobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("providerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("providerPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("providerId");

                    b.HasIndex("orderDetailsordersId");

                    b.ToTable("providerDetails");
                });

            modelBuilder.Entity("Final.Entities.providerServices", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("providerDetailsproviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("serviceList")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("providerDetailsproviderId");

                    b.ToTable("providerServices");
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.HasOne("Final.Entities.orderDetails", null)
                        .WithMany("customerDetails")
                        .HasForeignKey("orderDetailsordersId");
                });

            modelBuilder.Entity("Final.Entities.providerDetails", b =>
                {
                    b.HasOne("Final.Entities.orderDetails", null)
                        .WithMany("providerDetails")
                        .HasForeignKey("orderDetailsordersId");
                });

            modelBuilder.Entity("Final.Entities.providerServices", b =>
                {
                    b.HasOne("Final.Entities.providerDetails", "providerDetails")
                        .WithMany("providerService")
                        .HasForeignKey("providerDetailsproviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("providerDetails");
                });

            modelBuilder.Entity("Final.Entities.orderDetails", b =>
                {
                    b.Navigation("customerDetails");

                    b.Navigation("providerDetails");
                });

            modelBuilder.Entity("Final.Entities.providerDetails", b =>
                {
                    b.Navigation("providerService");
                });
#pragma warning restore 612, 618
        }
    }
}
